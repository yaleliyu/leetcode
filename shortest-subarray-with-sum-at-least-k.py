# https://leetcode.com/problems/shortest-subarray-with-sum-at-least-k/

class Solution:
    def traverse(self, A:list, K:int):
        currentSum = 0
        currentLen = 0

        result = len(A) + 1

        for i, val in enumerate(A):
            currentSum += A[i]
            currentLen += 1

            if currentSum <= 0:
                currentSum = 0
                currentLen = 0
                continue

            while currentSum >= K:
                if currentLen < result:
                    result = currentLen
                currentSum -= A[i - currentLen + 1]
                currentLen -= 1
                while currentLen > 0 and A[i - currentLen + 1] <= 0:
                    currentSum -= A[i - currentLen + 1]
                    currentLen -= 1

        return result if result <= len(A) else -1

    def shortestSubarray(self, A:list, K:int):
        rightRet = self.traverse(A, K)
        A.reverse()
        leftRet = self.traverse(A, K)

        return min(rightRet, leftRet)



sln = Solution()
print(sln.shortestSubarray([814,702,763,343,250,-271,308,-309,20,-93,302,762,789,853,-371,-78,544,348,-393,926,795,66,811,532,-206,706,-287,642,-33,-251,697,447,-380,378,429,988,-29,-424,207,615,-341,-219,857,779,667,301,811,340,806,791,887,-260,-439,770,-359,298,-214,567,833,786,530,27,-475,78,165,100,481,-96,838,-108,301,783,14,100,-459,-408,981,-328,658,23,924,101,794,577,-190,784,364,684,144,388,-402,-254,560,826,869,54,-149,-421,814,605,-107,642,836,93,-220,-149,-154,907,753,469,585,-217,-286,-481,398,512,969,247,525,460,495,-116,747,466,174,883,143,894,-467,-157,-273,284,611,-104,537,274,969,340,97,742,204,281,819,-222,-13,-400,700,601,-153,530,473,-404,-27,814,853,-109,825,948,-376,-202,-213,627,735,-20,483,-249,895,166,909,-87,-407,338,812,818,214,77,648,319,-166,135,177,-218,-323,697,35,-289,773,-96,-51,336,516,-472,923,312,57,87,230,808,-42,-265,98,-24,640,549,538,556,-9,539,429,-380,487,980,69,-399,538,-181,436,-452,-488,-383,-161,-25,715,594,433,-318,110,-495,939,133,317,-312,366,557,950,538,731,-91,635,262,817,-288,232,-349,669,969,-187,-317,872,-46,167,577,-351,72,-84,342,-352,332,-482,504,943,402,420,61,900,-261,396,-270,48,-380,834,66,-209,745,519,-330,876,161,162,-397,-443,867,-135,-62,-75,366,223,288,508,-287,420,534,-70,1,840,588,454,965,616,-476,155,516,536,-440,291,71,71,-295,976,533,143,0,876,572,386,336,-334,883,40,-339,-357,-138,227,113,-387,532,7,91,-464,618,678,872,383,284,651,345,-134,-327,821,744,232,-104,416,56,-409,934,647,-463,577,653,-330,-29,171,331,-425,-33,439,458,166,843,-39,863,-309,-174,-211,7,-146,351,-276,-74,551,634,569,-294,422,-126,-258,673,191,271,343,513,442,741,695,204,737,862,-107,547,-140,-318,709,864,-78,402,-258,-105,71,-28,272,-136,302,324,-252,-351,56,-88,-316,917,461,-52,916,-169,192,-236,-163,282,262,816,499,-201,-460,826,206,545,-373,160,-391,399,46,-215,459,-480,375,267,202,501,-193,135,973,602,-167,-7,-317,-377,810,-144,521,876,-52,976,367,598,-5,937,668,-173,-480,780,-346,260,324,-219,270,311,198,-332,714,779,-490,490,789,524,781,82,826,122,159,-58,505,420,198,-378,-186,889,-442,678,366,426,809,172,691,229,-64,-466,-70,840,78,344,274,934,956,881,181,-474,846,-60,19,-190,889,-364,290,731,977,86,994,-117,-138,154,313,-429,-457,-420,948,-57,315,343,-388,-353,840,444,308,-413,258,-4,254,338,-86,277,384,182,970,701,690,463,-215,466,-353,-386,629,-396,-455,216,-8,442,-110,-83,-404,931,23,709,476,-95,-146,491,762,4,472,209,197,265,948,86,-391,-107,-364,870,-257,558,704,-233,806,823,762,998,-27,530,637,-99,-32,749,-269,709,-103,388,274,-130,929,719,448,453,-148,-369,859,872,-357,694,994,-499,-132,859,747,-477,367,261,-472,577,-491,827,672,65,64,639,615,703,325,885,-292,900,-109,-324,613,-159,-1,598,-500,-215,-44,191,-473,335,223,-384,303,966,893,196,-489,709,323,196,746,83,-155,853,18,-11,-321,-245,904,-344,-410,-491,322,492,937,-486,554,501,197,-396,523,-429,330,525,381,875,-400,999,370,325,-238,149,530,755,-298,245,-494,-165,494,-482,-133,72,596,-120,919,168,989,293,339,802,-173,-457,352,9,206,-320,187,842,956,978,739,144,472,-162,434,293,-356,-272,-492,661,81,73,-245,207,-98,176,371,532,-335,563,5,-345,-185,395,-190,-274,847,211,-121,-210,118,-197,-479,537,969,-302,-311,-268,-297,886,-206,584,459,260,-318,321,349,-143,357,508,750,942,-301,463,262,683,155,95,-234,454,865,824,-292,58,37,597,250,-219,-115,563,904,33,781,918,83,753,802,-102,417,-164,597,751,43,344,675,816,934,987,593,-349,-369,657,-395,341,-203,432,540,-25,180,-270,-110,-164,298,972,-375,102,137,40,-106,-2,862,400,-165,-140,-71,876,-383,451,620,476,685,-354,126,779,-331,-154,-413,-202,199,755,669,134,871,-321,712,747,904,428,920,-82,-269,925,308,512,900,263,816,928,768,382,315,313,494,577,887,24,123,168,738,157,173,700,756,259,227,519,136,897,793,823,17,80,-156,-133,-373,-293,893,-180,644,804,917,446,-69,377,349,899,-314,670,306,-480,-301,401,-182,178,-141,385,-24,384,-277,-457,363,-86,706,678,-184,814,-347,544,97,873,-343,840,-412,-407,-219,516,358,188,178,271,-116,767,364,229,623,336,498,-76,-437,774,-268,899,334,131,479,13,-403,333,231,-500,194,160,677,171,138,-421,-52,-23,709,5,681,45,-113,746,790,712,673,515,-340,-280,734,-50,993,-291,120,-418,-217,-159,512,405,408,942,653,164,66,-389,762,-260,992,455,82,68,993,84,734,217,264,-366], 96470))
print(sln.shortestSubarray([-34,37,51,3,-12,-50,51,100,-47,99,34,14,-13,89,31,-14,-44,23,-38,6], 151))
print(sln.shortestSubarray([84,-37,32,40,95], 167))
print(sln.shortestSubarray([1], 1))
print(sln.shortestSubarray([1,2], 4))
print(sln.shortestSubarray([2, -1, 2], 3))

